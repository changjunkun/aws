{
 "Parameters": {
  "tags": {
   "Type": "String",
   "Description": "tag name and value with json format."
  },
  "identityRecording": {
   "Type": "String",
   "Default": "false",
   "Description": "Defines if the tool records the requester identity as a tag."
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "lambdarole3F9471F6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": {
     "Fn::Join": [
      "",
      [
       "resource-tagging-role-",
       {
        "Ref": "AWS::Region"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoTagResourceStack/lambda_role/Resource"
   }
  },
  "lambdaroleDefaultPolicyCADF8B22": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "GameLift:TagResource",
        "cloudformation:DescribeStacks",
        "cloudformation:ListStackResources",
        "docdb:AddTagsToResource",
        "docdb:ListTagsForResource",
        "docdb:RemoveTagsFromResource",
        "ds:*",
        "dynamodb:DescribeTable",
        "dynamodb:TagResource",
        "ec2:CreateTags",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeNatGateways",
        "ec2:DescribeRouteTables",
        "ec2:DescribeSubnets",
        "ec2:DescribeVolumes",
        "ec2:DescribeVpcs",
        "elasticache:AddTagsToResource",
        "elasticache:Describe*",
        "elasticache:DescribeCacheClusters",
        "elasticache:DescribeReplicationGroups",
        "elasticfilesystem:CreateTags",
        "elasticfilesystem:DescribeTags",
        "elasticfilesystem:TagResource",
        "elasticloadbalancing:AddTags",
        "es:AddTags",
        "kafka:*",
        "kafka:AddTagsToResource",
        "kafka:TagResource",
        "kafka:UntagResource",
        "kms:ListResourceTags",
        "kms:TagResource",
        "lambda:ListTags",
        "lambda:TagResource",
        "msk:TagResource",
        "msk:UntagResource",
        "rds:AddTagsToResource",
        "rds:DescribeDBInstances",
        "resource-groups:*",
        "route53:ListTagsForResource",
        "route53:TagResource",
        "route53:UntagResource",
        "s3:GetBucketTagging",
        "s3:PutBucketTagging",
        "sns:TagResource",
        "sqs:ListQueueTags",
        "sqs:TagQueue",
        "tag:TagResources",
        "tag:UntagResources",
        "tag:getResources",
        "tag:getTagKeys",
        "tag:getTagValues",
        "workspaces:*",
        "workspaces:DescribeWorkspaces",
        "workspaces:TagResource",
        "workspaces:UntagResource"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "lambdaroleDefaultPolicyCADF8B22",
    "Roles": [
     {
      "Ref": "lambdarole3F9471F6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoTagResourceStack/lambda_role/DefaultPolicy/Resource"
   }
  },
  "resourcetaggingautomationfunction14098B44": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-198480468982-eu-west-2",
     "S3Key": "c2941775612d3934f210ab42c40c6df67ed719cb04c4f1ea10a39d8f37850e16.zip"
    },
    "Environment": {
     "Variables": {
      "tags": {
       "Ref": "tags"
      },
      "identityRecording": {
       "Ref": "identityRecording"
      }
     }
    },
    "FunctionName": "resource-tagging-automation-function",
    "Handler": "lambda-handler.main",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "lambdarole3F9471F6",
      "Arn"
     ]
    },
    "Runtime": "python3.10",
    "Timeout": 600
   },
   "DependsOn": [
    "lambdaroleDefaultPolicyCADF8B22",
    "lambdarole3F9471F6"
   ],
   "Metadata": {
    "aws:cdk:path": "AutoTagResourceStack/resource_tagging_automation_function/Resource",
    "aws:asset:path": "asset.c2941775612d3934f210ab42c40c6df67ed719cb04c4f1ea10a39d8f37850e16",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "resourcetaggingautomationrule320D34CC": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "detail": {
      "eventSource": [
       "ec2.amazonaws.com",
       "elasticloadbalancing.amazonaws.com",
       "s3.amazonaws.com",
       "rds.amazonaws.com",
       "lambda.amazonaws.com",
       "dynamodb.amazonaws.com",
       "elasticfilesystem.amazonaws.com",
       "es.amazonaws.com",
       "sqs.amazonaws.com",
       "sns.amazonaws.com",
       "kms.amazonaws.com",
       "elasticache.amazonaws.com",
       "gamelift.amazonaws.com",
       "dms.amazonaws.com",
       "kafka.amazonaws.com",
       "route53.amazonaws.com",
       "eks.amazonaws.com",
       "workspaces.amazonaws.com"
      ],
      "eventName": [
       "RunInstances",
       "CreateFunction20150331",
       "CreateBucket",
       "CreateDBInstance",
       "CreateTable",
       "CreateVolume",
       "CreateLoadBalancer",
       "CreateMountTarget",
       "CreateDomain",
       "CreateQueue",
       "CreateTopic",
       "CreateKey",
       "CreateReplicationGroup",
       "CreateCacheCluster",
       "ModifyReplicationGroupShardConfiguration",
       "CreateFleet",
       "CreateNatGateway",
       "CreateSubnet",
       "CreateVpc",
       "CreateRoute",
       "CreateHostedZone",
       "CreateCluster",
       "AllocateAddress",
       "DeregisterWorkspaceDirectory",
       "workspaceId",
       "CreateDirectory",
       "CreateInternetGateway",
       "CreateVpcEndpoint",
       "CreateTransitGateway",
       "CreateReplicationInstance",
       "CreateReplicationGroup",
       "ModifyCluster",
       "CreateWorkspaces",
       "ChangeResourceRecordSets",
       "CreateServerlessCache",
       "CreateCacheCluster",
       "CreateReplicationGroup",
       "CopyServerlessCacheSnapshot",
       "CopySnapshot",
       "CreateCacheParameterGroup",
       "CreateCacheSecurityGroup",
       "CreateCacheSubnetGroup",
       "CreateServerlessCacheSnapshot",
       "CreateSnapshot",
       "CreateUserGroup",
       "CreateUser",
       "PurchaseReservedCacheNodesOffering",
       "CreateRecordSet",
       "CreateInboundEndpoint",
       "CreateHostedZone",
       "UpdateCluster",
       "CreateStream",
       "UpdateStream",
       "CreateWorkspace",
       "CreateVpcPeeringConnection",
       "DeleteVpcPeeringConnection",
       "CreateTags"
      ]
     },
     "detail-type": [
      "AWS API Call via CloudTrail"
     ],
     "source": [
      "aws.ec2",
      "aws.elasticloadbalancing",
      "aws.rds",
      "aws.lambda",
      "aws.s3",
      "aws.dynamodb",
      "aws.elasticfilesystem",
      "aws.es",
      "aws.sqs",
      "aws.sns",
      "aws.kms",
      "aws.elasticache",
      "aws.gamelift",
      "aws.msk",
      "aws.route53",
      "aws.workspaces",
      "aws.eks"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "resourcetaggingautomationfunction14098B44",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumRetryAttempts": 2
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AutoTagResourceStack/resource-tagging-automation-rule/Resource"
   }
  },
  "resourcetaggingautomationruleAllowEventRuleAutoTagResourceStackresourcetaggingautomationfunctionEF666F1D7148A238": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "resourcetaggingautomationfunction14098B44",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "resourcetaggingautomationrule320D34CC",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AutoTagResourceStack/resource-tagging-automation-rule/AllowEventRuleAutoTagResourceStackresourcetaggingautomationfunctionEF666F1D"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02NS2oDQQxEz+K9RvkMBm/jQNbD+ABGbiuOMv2BljrGNH13M20vsnoFr4p6x7ftFl83dNXBnZfBywnrwcgt8PkdJ8oU2DgDXfVYhQLWOXleXeeUvLhbr/bUwFM4nQnrV4nOJMXV/c8T5yCqkmIDHY+kyqb4sQJ0xH1xC9uelIH/OJpincvzsHhuDWbWVLJj6JuD0UXipfunaDDd7CfFlxF3uNv8qsiQSzQJjPODd3dZ9h72AAAA"
   },
   "Metadata": {
    "aws:cdk:path": "AutoTagResourceStack/CDKMetadata/Default"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}